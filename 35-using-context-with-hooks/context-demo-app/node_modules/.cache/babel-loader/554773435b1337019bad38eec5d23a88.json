{"ast":null,"code":"function createBroadcast(initialState) {\n  var listeners = {};\n  var id = 1;\n  var _state = initialState;\n  function getState() {\n    return _state;\n  }\n  function setState(state) {\n    _state = state;\n    var keys = Object.keys(listeners);\n    var i = 0;\n    var len = keys.length;\n    for (; i < len; i++) {\n      // if a listener gets unsubscribed during setState we just skip it\n      if (listeners[keys[i]]) {\n        listeners[keys[i]](state);\n      }\n    }\n  }\n\n  // subscribe to changes and return the subscriptionId\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('listener must be a function.');\n    }\n    var currentId = id;\n    listeners[currentId] = listener;\n    id += 1;\n    return currentId;\n  }\n\n  // remove subscription by removing the listener function\n  function unsubscribe(id) {\n    delete listeners[id];\n  }\n  return {\n    getState: getState,\n    setState: setState,\n    subscribe: subscribe,\n    unsubscribe: unsubscribe\n  };\n}\nexport default createBroadcast;","map":null,"metadata":{},"sourceType":"module"}