{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _jssGlobal = _interopRequireDefault(require(\"jss-global\"));\nvar _jssNested = _interopRequireDefault(require(\"jss-nested\"));\nvar _jssCamelCase = _interopRequireDefault(require(\"jss-camel-case\"));\nvar _jssDefaultUnit = _interopRequireDefault(require(\"jss-default-unit\"));\nvar _jssVendorPrefixer = _interopRequireDefault(require(\"jss-vendor-prefixer\"));\nvar _jssPropsSort = _interopRequireDefault(require(\"jss-props-sort\"));\n\n// Subset of jss-preset-default with only the plugins the Material-UI components are using.\nfunction jssPreset() {\n  return {\n    plugins: [(0, _jssGlobal.default)(), (0, _jssNested.default)(), (0, _jssCamelCase.default)(), (0, _jssDefaultUnit.default)(),\n    // Disable the vendor prefixer server-side, it does nothing.\n    // This way, we can get a performance boost.\n    // In the documentation, we are using `autoprefixer` to solve this problem.\n    typeof window === 'undefined' ? null : (0, _jssVendorPrefixer.default)(), (0, _jssPropsSort.default)()]\n  };\n}\nvar _default = jssPreset;\nexports.default = _default;","map":null,"metadata":{},"sourceType":"script"}